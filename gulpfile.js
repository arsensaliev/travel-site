const gulp = require('gulp') // заносим все ранее установленные инструменты в константы (установка инструментов: npm install gulp-sass gulp-sourcemaps gulp-watch --SD)
const sass = require('gulp-sass') // отвечает за компилирование sass и scss кода в обычный css
const sourcemaps = require('gulp-sourcemaps') // отвечает за коректный вывод строки кода в консоли браузера (если бы мы не использовали данный инструмент, то показывалась строка в итоговом css файле, а так мы можем увидеть в какой scss файле и на какой строке находится стиль)
const watch = require('gulp-watch') // отвечает за постоянный мониторинг определенных файлов, а также за применение определенных действий при их изменении

gulp.task('scss-compile', function() { // создаем "задание", в которое первым параметром передаем название задания, а вторым параметром - функцию в которой хранятся код всех действий
    // return gulp.src('./assets/styles/scss/**/*.scss') // возвращаем путь к файлам в которых должен храниться scss код. две звездочки озночают проверку всех вложенных файлов (/**), а одна звездочка указывает безраличие к названию файла и производит поиск лишь по расширению (/*.scss)
    return gulp.src('./src/styles/scss/main.scss') // апгрейд, теперь мониториться только этот файл, а все scss файлы импортируются в него
    .pipe(sourcemaps.init()) // прописываем "действие" инициализирующее работу sourcemaps
    .pipe(sass().on('error', sass.logError)) // запускаем sass и прописываем текст, выводящийся при ошибке
    .pipe(sourcemaps.write('./')) // понятие не имею что это значит, но могу предположить, что это указывание пути откуда будет производиться поиск файлов и соответствующих строк или чтото в этом духе
    .pipe(gulp.dest('./src/styles/css/')) // указывает путь до месте где будет находиться итоговый css файл
})

gulp.task('watch', function() { // таск позволяющий постоянно мониторить состояние scss файлов. и в случаи изменения будет вызван первый таск (компилирующий), для этого используем gulp-watch 
    gulp.watch('./src/styles/scss/**/*.scss', gulp.series('scss-compile')) // передаем метожу watch два параметра: путь к файлам, которые он должен мониторить; с помощью метода series передаем название (ну собственно он будет вызываться) таска, который должен быть выполнен при изменении
})